[01m[32mStarted lexing[00m paren_expr
[   0:   1:  separator] `[`
[   1:   2: identifier] `c`
[   2:   3:  separator] `]`
[   4:   8: identifier] `func`
[   9:  15: identifier] `printf`
[  15:  16:  separator] `(`
[  16:  19: identifier] `fmt`
[  19:  20:   operator] `:`
[  21:  22:   operator] `^`
[  22:  24: identifier] `u8`
[  24:  25:  separator] `,`
[  26:  27:  separator] `.`
[  27:  28:  separator] `.`
[  28:  29:  separator] `.`
[  29:  30:  separator] `)`
[  31:  33:   operator] `->`
[  34:  37: identifier] `int`
[  37:  38:  separator] `;`
[  40:  43: identifier] `pub`
[  44:  48: identifier] `func`
[  49:  53: identifier] `main`
[  53:  54:  separator] `(`
[  54:  55:  separator] `)`
[  56:  58:   operator] `->`
[  59:  62: identifier] `int`
[  63:  64:  separator] `{`
[  66:  67: identifier] `j`
[  67:  68:   operator] `:`
[  69:  72: identifier] `int`
[  73:  74:   operator] `=`
[  75:  77:     number] `12`
[  77:  78:  separator] `;`
[  80:  81: identifier] `i`
[  81:  82:   operator] `:`
[  83:  86: identifier] `int`
[  87:  88:   operator] `=`
[  89:  90:  separator] `(`
[  90:  91: identifier] `j`
[  92:  93:   operator] `+`
[  94:  96:     number] `25`
[  96:  97:  separator] `)`
[  97:  98:  separator] `;`
[ 100: 101: identifier] `C`
[ 101: 103:   operator] `::`
[ 103: 109: identifier] `printf`
[ 109: 110:  separator] `(`
[ 110: 111: identifier] `c`
[ 112: 116:     string] `%d\n`
[ 117: 118:  separator] `,`
[ 119: 120: identifier] `i`
[ 120: 121:  separator] `)`
[ 121: 122:  separator] `;`
[ 124: 130: identifier] `return`
[ 131: 132:     number] `0`
[ 132: 133:  separator] `;`
[ 134: 135:  separator] `}`
[01m[32mEnded lexing[00m paren_expr (0.34ms)
[01m[32mStarted parsing[00m paren_expr
decl / func / block / node / decl / vardecl / vardeclbody / expr / postfixexpr / primaryexpr / litexpr / tuplelit
[31m[01merror:[00m [paren_expr:5:14] Expected `)` (separator), got `+` (operator)
    i: int = (j + 25);
                [32m[01m^[00m
